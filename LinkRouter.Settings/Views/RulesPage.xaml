<Page
    x:Class="LinkRouter.Settings.Views.RulesPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:controls="using:LinkRouter.Settings.Controls"
    xmlns:viewModels="using:LinkRouter.Settings.ViewModels"
    mc:Ignorable="d">
    <Page.DataContext>
        <viewModels:RulesViewModel />
    </Page.DataContext>

    <Grid Margin="16">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="320" />
            <ColumnDefinition Width="24" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <muxc:CommandBar Grid.ColumnSpan="3" DefaultLabelPosition="Right">
            <AppBarButton Icon="Add" Label="Add" Command="{x:Bind ViewModel.AddRuleCommand}" />
            <AppBarButton Icon="Delete" Label="Delete" Command="{x:Bind ViewModel.DeleteRuleCommand}" CommandParameter="{x:Bind ViewModel.SelectedRule}" />
            <AppBarButton Icon="Copy" Label="Duplicate" Command="{x:Bind ViewModel.DuplicateRuleCommand}" CommandParameter="{x:Bind ViewModel.SelectedRule}" />
            <AppBarButton Label="Move up" Command="{x:Bind ViewModel.MoveUpCommand}" CommandParameter="{x:Bind ViewModel.SelectedRule}">
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xE74A;" />
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton Label="Move down" Command="{x:Bind ViewModel.MoveDownCommand}" CommandParameter="{x:Bind ViewModel.SelectedRule}">
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xE74B;" />
                </AppBarButton.Icon>
            </AppBarButton>
            <muxc:CommandBar.Content>
                <StackPanel Orientation="Horizontal" Spacing="12">
                    <AutoSuggestBox Width="220"
                                     PlaceholderText="Search rules"
                                     QueryIcon="Find"
                                     Text="{x:Bind ViewModel.FilterText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <ComboBox Width="180"
                              ItemsSource="{x:Bind ViewModel.SortOptions, Mode=OneWay}"
                              SelectedItem="{x:Bind ViewModel.SelectedSortOption, Mode=TwoWay}" />
                </StackPanel>
            </muxc:CommandBar.Content>
        </muxc:CommandBar>

        <StackPanel Grid.Row="1" Grid.Column="0" Spacing="8">
            <TextBlock Text="Rules" Style="{StaticResource BodyStrongTextBlockStyle}" />
            <ListView ItemsSource="{x:Bind ViewModel.FilteredRules}" SelectedItem="{x:Bind ViewModel.SelectedRule, Mode=TwoWay}" SelectionMode="Single" Height="Auto">
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="viewModels:RuleEditorViewModel">
                        <Grid ColumnSpacing="8">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <StackPanel>
                                <TextBlock Text="{x:Bind DisplayName}" />
                                <TextBlock Text="{x:Bind Browser}" FontSize="12" Foreground="{ThemeResource TextFillColorSecondaryBrush}" />
                            </StackPanel>
                            <muxc:InfoBadge Grid.Column="1"
                                            Value="!"
                                            IsHitTestVisible="False"
                                            Visibility="{x:Bind HasValidationErrors ? Visibility.Visible : Visibility.Collapsed, Mode=OneWay}" />
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <TextBlock Text="No rules match your search." Foreground="{ThemeResource TextFillColorSecondaryBrush}" Visibility="{x:Bind ViewModel.HasFilter && !ViewModel.HasFilteredResults ? Visibility.Visible : Visibility.Collapsed, Mode=OneWay}" />
        </StackPanel>

        <ScrollViewer Grid.Row="1" Grid.Column="2">
            <StackPanel Spacing="16">
                <controls:SettingsCard Header="Rule basics">
                    <StackPanel Spacing="12" DataContext="{x:Bind ViewModel.SelectedRule, Mode=OneWay}">
                        <ToggleSwitch Header="Enabled" IsOn="{Binding Enabled, Mode=TwoWay}" />
                        <ComboBox Header="Match type"
                                  ItemsSource="{x:Bind ViewModel.MatchTypes}"
                                  SelectedItem="{Binding Match, Mode=TwoWay}" />
                        <TextBox Header="Pattern"
                                 Text="{Binding Pattern, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 PlaceholderText="example.com" />
                        <TextBox Header="Browser path"
                                 Text="{Binding Browser, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 PlaceholderText="C:\\Program Files\\Browser\\browser.exe" />
                        <ComboBox Header="Use saved profile"
                                  PlaceholderText="Optional"
                                  ItemsSource="{x:Bind ViewModel.Profiles, Mode=OneWay}"
                                  SelectedItem="{Binding UseProfile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBox Header="Profile override"
                                 Text="{Binding Profile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 PlaceholderText="Profile name or command argument" />
                        <muxc:InfoBar IsOpen="{Binding HasValidationErrors, Mode=OneWay}" Severity="Warning" Message="{Binding PrimaryError}" />
                    </StackPanel>
                </controls:SettingsCard>

                <controls:SettingsCard Header="Advanced options">
                    <muxc:Expander HorizontalAlignment="Stretch" IsExpanded="False">
                        <muxc:Expander.Header>
                            <TextBlock Text="Show advanced fields" />
                        </muxc:Expander.Header>
                        <StackPanel Spacing="12" Margin="0,12,0,0" DataContext="{x:Bind ViewModel.SelectedRule, Mode=OneWay}">
                            <TextBox Header="Arguments template"
                                     Text="{Binding ArgsTemplate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     PlaceholderText="--profile-directory={profile}" />
                            <TextBox Header="User data directory"
                                     Text="{Binding UserDataDir, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBox Header="Working directory"
                                     Text="{Binding WorkingDirectory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>
                    </muxc:Expander>
                </controls:SettingsCard>

                <controls:SettingsCard Header="Test this rule">
                    <StackPanel Spacing="12">
                        <TextBox Header="URL to test"
                                 PlaceholderText="https://example.com"
                                 Text="{x:Bind ViewModel.TestUrl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <StackPanel Orientation="Horizontal" Spacing="8">
                            <Button Content="Run test" Command="{x:Bind ViewModel.TestRuleCommand}" />
                            <TextBlock Text="Uses the full configuration for realistic results." Foreground="{ThemeResource TextFillColorSecondaryBrush}" />
                        </StackPanel>
                        <muxc:InfoBar IsOpen="{x:Bind !string.IsNullOrEmpty(ViewModel.TestResult), Mode=OneWay}"
                                      Severity="Success"
                                      Message="{x:Bind ViewModel.TestResult}" />
                        <muxc:InfoBar IsOpen="{x:Bind !string.IsNullOrEmpty(ViewModel.TestError), Mode=OneWay}"
                                      Severity="Error"
                                      Message="{x:Bind ViewModel.TestError}" />
                    </StackPanel>
                </controls:SettingsCard>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>
